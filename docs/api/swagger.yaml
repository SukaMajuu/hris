openapi: 3.0.0
info:
    title: HRIS API
    description: API documentation for Human Resource Information System
    version: 1.0.0
    contact:
        name: SukaMaju
servers:
    - url: https://hris-backend-sukamaju123.azurewebsites.net/api
      description: Production server
    - url: http://localhost:8000/api
      description: Development server

components:
    securitySchemes:
        bearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT
    schemas:
        User:
            type: object
            properties:
                id:
                    type: integer
                    example: 1
                name:
                    type: string
                    example: "John Doe"
                email:
                    type: string
                    format: email
                    example: "john.doe@example.com"
                role:
                    type: string
                    enum: [admin, hr, manager, employee]
                    example: "employee"
                created_at:
                    type: string
                    format: date-time
        Employee:
            type: object
            properties:
                id:
                    type: integer
                    example: 1
                user_id:
                    type: integer
                    example: 1
                employee_id:
                    type: string
                    example: "EMP-2023-001"
                first_name:
                    type: string
                    example: "John"
                last_name:
                    type: string
                    example: "Doe"
                position:
                    type: string
                    example: "Software Engineer"
                department:
                    type: string
                    example: "Engineering"
                hire_date:
                    type: string
                    format: date
                    example: "2023-01-15"
                status:
                    type: string
                    enum: [active, inactive, on_leave]
                    example: "active"
        Department:
            type: object
            properties:
                id:
                    type: integer
                    example: 1
                name:
                    type: string
                    example: "Engineering"
                manager_id:
                    type: integer
                    nullable: true
                    example: 5
        Leave:
            type: object
            properties:
                id:
                    type: integer
                    example: 1
                employee_id:
                    type: integer
                    example: 1
                leave_type:
                    type: string
                    enum: [annual, sick, maternity, paternity, unpaid]
                    example: "annual"
                start_date:
                    type: string
                    format: date
                    example: "2023-06-15"
                end_date:
                    type: string
                    format: date
                    example: "2023-06-20"
                status:
                    type: string
                    enum: [pending, approved, rejected]
                    example: "pending"
                reason:
                    type: string
                    example: "Family vacation"
        Error:
            type: object
            properties:
                code:
                    type: integer
                message:
                    type: string

security:
    - bearerAuth: []

paths:
    /auth/login:
        post:
            tags:
                - Authentication
            summary: User login
            security: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                email:
                                    type: string
                                    format: email
                                    example: "john.doe@example.com"
                                password:
                                    type: string
                                    format: password
                                    example: "password123"
                            required:
                                - email
                                - password
            responses:
                "200":
                    description: Successful login
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    token:
                                        type: string
                                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                    user:
                                        $ref: "#/components/schemas/User"
                "401":
                    description: Invalid credentials
