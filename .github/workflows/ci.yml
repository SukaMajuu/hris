name: CI Pipeline

on:
    pull_request:
        branches: ["**"]

permissions:
    actions: read
    contents: read
    pull-requests: write

jobs:
    frontend-checks:
        name: Frontend Lint & Test
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: "npm"
                  cache-dependency-path: "apps/frontend/package-lock.json"

            - name: Install dependencies
              run: npm install
              working-directory: apps/frontend

            - name: Lint
              run: npm run lint
              working-directory: apps/frontend

            - name: Run tests
              run: npm run test
              working-directory: apps/frontend

    backend-checks:
        name: Backend Lint & Test
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:15
                env:
                    POSTGRES_PASSWORD: root
                    POSTGRES_USER: root
                    POSTGRES_DB: hris
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        steps:
            - uses: actions/checkout@v3

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: "8.2"
                  extensions: mbstring, dom, fileinfo, pgsql, pdo_pgsql
                  coverage: none
                  tools: composer:v2

            - name: Get composer cache directory
              id: composer-cache
              run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            - name: Cache composer dependencies
              uses: actions/cache@v3
              with:
                  path: ${{ steps.composer-cache.outputs.dir }}
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: composer install --prefer-dist --no-interaction
              working-directory: apps/backend

            - name: Copy .env
              run: php -r "file_exists('.env') || copy('.env.example', '.env');"
              working-directory: apps/backend

            - name: Generate key
              run: php artisan key:generate
              working-directory: apps/backend

            - name: Configure Database
              run: |
                  php artisan config:clear
                  php artisan migrate --force
              working-directory: apps/backend
              env:
                  DB_CONNECTION: pgsql
                  DB_HOST: localhost
                  DB_PORT: 5432
                  DB_DATABASE: hris
                  DB_USERNAME: root
                  DB_PASSWORD: root

            - name: Run Laravel tests
              run: php artisan test --parallel
              working-directory: apps/backend
              env:
                  DB_CONNECTION: pgsql
                  DB_HOST: localhost
                  DB_PORT: 5432
                  DB_DATABASE: hris
                  DB_USERNAME: root
                  DB_PASSWORD: root
